#include <stdio.h>
#include <stdlib.h>
#include <time.h>


struct Node {
    int data;
    struct Node* next;
};


void insertAtBeginning(struct Node** head, int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = *head;
    *head = newNode;
}


void bubbleSort(struct Node* head) {
    int swapped;
    struct Node* temp;
    struct Node* lastSorted = NULL;

    
    if (head == NULL)
        return;

    do {
        swapped = 0;
        temp = head;

        while (temp->next != lastSorted) {
            if (temp->data > temp->next->data) {
                // Swap the data of two nodes
                int tempData = temp->data;
                temp->data = temp->next->data;
                temp->next->data = tempData;

                swapped = 1;
            }
            temp = temp->next;
        }
        lastSorted = temp;
    } while (swapped);
}


void printList(struct Node* head) {
    int count = 0;
    while (head != NULL) {
        printf("%d ", head->data);
        head = head->next;
        count++;

        
        if (count % 5 == 0)
            printf("\n");
    }
}

int main() {
    
    srand(time(NULL));

    
    struct Node* list = NULL;

    
    for (int i = 0; i < 100; i++) {
        insertAtBeginning(&list, rand() % 1000); 

    
    printf("Unsorted List:\n");
    printList(list);

   
    bubbleSort(list);

    
    printf("\n\nSorted List:\n");
    printList(list);

    return 0;
}
